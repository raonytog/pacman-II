==6700== Memcheck, a memory error detector
==6700== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6700== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==6700== Command: Resultados/Raony/tTunel/prog Resultados/Raony/tTunel/Casos/05
==6700== Parent PID: 6699
==6700== 
==6700== error calling PR_SET_PTRACER, vgdb might block
==6700== Invalid read of size 8
==6700==    at 0x10D1B3: DesalocaTunel (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==    by 0x10C260: DesalocaMapa (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==    by 0x10B819: DesalocaJogo (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==    by 0x10B8BB: main (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==6700== 
==6700== 
==6700== Process terminating with default action of signal 11 (SIGSEGV)
==6700==  Access not within mapped region at address 0x0
==6700==    at 0x10D1B3: DesalocaTunel (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==    by 0x10C260: DesalocaMapa (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==    by 0x10B819: DesalocaJogo (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==    by 0x10B8BB: main (in /mnt/c/Users/DELL/Documents/GitHub/pacman-revival/Resultados/Raony/tTunel/prog)
==6700==  If you believe this happened as a result of a stack
==6700==  overflow in your program's main thread (unlikely but
==6700==  possible), you can try to increase the size of the
==6700==  main thread stack using the --main-stacksize= flag.
==6700==  The main thread stack size used in this run was 8388608.
==6700== 
==6700== HEAP SUMMARY:
==6700==     in use at exit: 24,476 bytes in 350 blocks
==6700==   total heap usage: 1,431,242 allocs, 1,430,892 frees, 12,140,333 bytes allocated
==6700== 
==6700== LEAK SUMMARY:
==6700==    definitely lost: 0 bytes in 0 blocks
==6700==    indirectly lost: 0 bytes in 0 blocks
==6700==      possibly lost: 0 bytes in 0 blocks
==6700==    still reachable: 24,476 bytes in 350 blocks
==6700==         suppressed: 0 bytes in 0 blocks
==6700== Reachable blocks (those to which a pointer was found) are not shown.
==6700== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==6700== 
==6700== For lists of detected and suppressed errors, rerun with: -s
==6700== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
