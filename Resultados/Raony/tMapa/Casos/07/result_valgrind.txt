==169837== Memcheck, a memory error detector
==169837== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==169837== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==169837== Command: Resultados/Raony/tMapa/prog Resultados/Raony/tMapa/Casos/07
==169837== Parent PID: 169836
==169837== 
==169837== Use of uninitialised value of size 8
==169837==    at 0x10BA05: CriaMapa (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==    by 0x10A767: CriaJogo (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==    by 0x10B8BF: main (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837== 
==169837== Invalid read of size 8
==169837==    at 0x10BA05: CriaMapa (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==    by 0x10A767: CriaJogo (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==    by 0x10B8BF: main (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==169837== 
==169837== 
==169837== Process terminating with default action of signal 11 (SIGSEGV)
==169837==  Access not within mapped region at address 0x0
==169837==    at 0x10BA05: CriaMapa (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==    by 0x10A767: CriaJogo (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==    by 0x10B8BF: main (in /home/rtgomes/prog/pacman-revival/Resultados/Raony/tMapa/prog)
==169837==  If you believe this happened as a result of a stack
==169837==  overflow in your program's main thread (unlikely but
==169837==  possible), you can try to increase the size of the
==169837==  main thread stack using the --main-stacksize= flag.
==169837==  The main thread stack size used in this run was 8388608.
==169837== 
==169837== HEAP SUMMARY:
==169837==     in use at exit: 88 bytes in 2 blocks
==169837==   total heap usage: 2 allocs, 0 frees, 88 bytes allocated
==169837== 
==169837== LEAK SUMMARY:
==169837==    definitely lost: 0 bytes in 0 blocks
==169837==    indirectly lost: 0 bytes in 0 blocks
==169837==      possibly lost: 0 bytes in 0 blocks
==169837==    still reachable: 88 bytes in 2 blocks
==169837==         suppressed: 0 bytes in 0 blocks
==169837== Reachable blocks (those to which a pointer was found) are not shown.
==169837== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==169837== 
==169837== Use --track-origins=yes to see where uninitialised values come from
==169837== For lists of detected and suppressed errors, rerun with: -s
==169837== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
